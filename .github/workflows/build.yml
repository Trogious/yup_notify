name: release and publish

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install mono
      run: |
        sudo apt-get install mono-mcs
    - name: build exe
      run: |
        mcs -r:System.Net.Http -sdk:4.5 *.cs
        mono *.exe || echo 'not run'
    - name: prepare release
      id: prepare_release
      if: contains(github.ref, 'tags/')
      run: |
        TAG_NAME=`echo $GITHUB_REF | cut -d / -f3`
        echo ::set-output name=tag_name::$TAG_NAME
        VERSION=`echo $TAG_NAME | cut -c2-`
        echo ::set-output name=version_for_setup::$VERSION
    - name: assemble package
      id: asseemble_package
      if: startsWith(steps.prepare_release.outputs.tag_name, 'v')
      run: |
        DIRNAME=${{github.event.repository.name}}-${{steps.prepare_release.outputs.version_for_setup}}
        mkdir ./$DIRNAME
        mv -v *.{py,exe} ./$DIRNAME/
        TGZ_PATH=./$DIRNAME.tgz
        tar -czvf $TGZ_PATH ./$DIRNAME
        TGZ_NAME=`basename $TGZ_PATH`
        echo ::set-output name=tgz_name::$TGZ_NAME
    - name: create release
      id: create_release
      if: steps.prepare_release.outputs.tag_name && steps.asseemble_package.outputs.tgz_name
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{steps.prepare_release.outputs.tag_name}}
        release_name: Release ${{steps.prepare_release.outputs.tag_name}}
        draft: false
        prerelease: false
    - name: upload tgz
      if: steps.create_release.outputs.upload_url && steps.asseemble_package.outputs.tgz_name
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./${{steps.asseemble_package.outputs.tgz_name}}
        asset_name: ${{steps.asseemble_package.outputs.tgz_name}}
        asset_content_type: application/gzip
